name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]
  status: {}

# Minimum required scopes for this workflow to set auto-merge and comment
permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    # Only run for PRs opened by Dependabot
    if: github.actor == 'dependabot[bot]'

    steps:
      - name: Checkout (shallow ok)
        uses: actions/checkout@v4

      # Use official Dependabot metadata to reliably detect update type
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Determine the PR number across all triggering events without brittle JSON passing
      - name: Detect PR number
        id: prnum
        shell: bash
        run: |
          set -euo pipefail
          # Prefer the PR number directly from pull_request events
          if [ -n "${{ github.event.pull_request.number || '' }}" ]; then
            echo "number=${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # From check_suite events that reference PRs
          if [ -n "${{ github.event.check_suite.pull_requests[0].number || '' }}" ]; then
            echo "number=${{ github.event.check_suite.pull_requests[0].number }}" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # Fallback: try to infer by the current SHA (useful for 'status' event)
          PR=$(gh pr list --search "${{ github.sha }}" --state open --json number,headRefOid | jq -r 'map(select(.headRefOid=="${{ github.sha }}"))[0].number // empty')
          if [ -n "$PR" ]; then
            echo "number=$PR" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Could not determine PR number for this event." >&2
          exit 1
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optionally add helpful labels on Dependabot PRs
      - name: Ensure labels
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          PR=${{ steps.prnum.outputs.number }}

          # Always label as dependencies
          gh pr edit "$PR" --add-label "dependencies" --repo "${{ github.repository }}"

          # Add an update-type label (minor/patch/major/unknown)
          case "${{ steps.metadata.outputs.update-type }}" in
            version-update:semver-minor) gh pr edit "$PR" --add-label "semver:minor" --repo "${{ github.repository }}" ;;
            version-update:semver-patch) gh pr edit "$PR" --add-label "semver:patch" --repo "${{ github.repository }}" ;;
            version-update:semver-major) gh pr edit "$PR" --add-label "semver:major" --repo "${{ github.repository }}" ;;
            *) gh pr edit "$PR" --add-label "semver:unknown" --repo "${{ github.repository }}" ;;
          esac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # If it's a major update, leave a note and stop (manual review required)
      - name: Comment on major updates
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "${{ steps.prnum.outputs.number }}" \
            --body "ðŸš¨ **Major version update detected.** Auto-merge is **disabled** for majors to avoid breaking changes. Please review and merge manually." \
            --repo "${{ github.repository }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # For patch/minor updates: request auto-merge.
      # GitHub will only actually merge after all required checks & reviews pass,
      # so we don't need to poll/wait here.
      - name: Enable auto-merge (patch/minor only)
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-minor' ||
          steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: |
          PR=${{ steps.prnum.outputs.number }}
          echo "Enabling auto-merge for PR #$PR (${% raw %}{{% endraw %}}${{ steps.metadata.outputs.update-type }})"
          gh pr merge "$PR" --squash --auto --repo "${{ github.repository }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Optional: if the PR is out-of-date with base, ask Dependabot to rebase itself.
      - name: Ask Dependabot to rebase if out of date
        if: |
          steps.metadata.outputs.update-type == 'version-update:semver-minor' ||
          steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: |
          PR=${{ steps.prnum.outputs.number }}
          # If merge is blocked due to out-of-date branch, comment to trigger a rebase.
          BLOCKED=$(gh pr view "$PR" --json mergeStateStatus --jq '.mergeStateStatus')
          if [ "$BLOCKED" = "BLOCKED" ] || [ "$BLOCKED" = "BEHIND" ]; then
            gh pr comment "$PR" --body "@dependabot rebase" --repo "${{ github.repository }}"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
